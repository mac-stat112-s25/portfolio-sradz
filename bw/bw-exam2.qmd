---
title: "bw-exam2"
format: html
---
# 2: Setup
```{r}
# load packages
library(tidyverse)
library(tidytuesdayR)
library(rnaturalearth)
library(sf)
```

```{r}
# load data

tuesdata <- tt_load('2020-02-18')
fc <- tuesdata$food_consumption
```
```{r}
# fix variables
fc2 <- fc |>
  mutate(food_category = fct_recode(food_category, 
                                    "Lamb" = "Lamb & Goat",
                                    "Milk" = "Milk - inc. cheese",
                                    "Wheat" = "Wheat and Wheat Products",
                                    "Nuts" = "Nuts inc. Peanut Butter")) |>
  select(-co2_emmission)
fc2 |>
  distinct(food_category)
```


# 3: Most Consuming Countries
** Which 5 countries consume the most food?**
```{r}
fc2 |>
  group_by(country) |>
  summarize(total_consumption = sum(consumption)) |>
  arrange(desc(total_consumption)) |>
  mutate(country = fct_reorder(country, total_consumption)) |>
  head(5) |>
  ggplot(aes(x=country, y=total_consumption))+
  geom_col()
```

# 4: Most Consuming Countries of Each Food

**What are the top 5 countries for each food category?**

```{r}
fc2 |>
  group_by(food_category) |>
  slice_max(n=5, consumption) 

```

# 5: Food Consumption
**What does the consumption of each food look like?**

```{r}
fc3 <- ne_countries(returnclass = "sf") |>
  select(name, geometry) |>
  mutate(name = ifelse(name == "United States of America", "USA", name)) |>
  mutate(name = ifelse(name == "Bosnia and Herz.", "Bosnia and Herzegovina", name)) |>
  mutate(name = ifelse(name == "Czechia", "Czech Republic", name)) |>
  mutate(name = ifelse(name == "Taiwan", "Taiwan. ROC", name)) |>
  left_join(fc2 |>
              group_by(food_category) |>
              mutate(consumption = (consumption - mean(consumption))/sd(consumption)), join_by(name == country)) |>
  pivot_wider(names_from = food_category, values_from = consumption) |>
  select(-"NA") |>
  pivot_longer(cols = 3:13, names_to = "food_category", values_to = "consumption")

```

```{r}
ggplot(fc3) +
  geom_sf(aes(fill = consumption))+
  facet_wrap(~food_category)+
  theme(legend.position = "bottom")
```

